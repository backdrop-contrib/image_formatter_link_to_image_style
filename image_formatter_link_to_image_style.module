<?php

/**
 * @file
 * Provides an additional formatter for image core field,
 * to link to an image style.
 */

/**
 * Implements hook_field_formatter_info().
 */
function image_formatter_link_to_image_style_field_formatter_info() {
  $formatters = array(
    'image_formatter_link_to_image_style' => array(
      'label' => t('Image link to image style'),
      'field types' => array('image'),
      'settings' => array('image_style' => '', 'image_link_style' => ''),
    ),
  );

  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function image_formatter_link_to_image_style_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $element['image_style'] = array(
    '#title' => t('Image style'),
    '#type' => 'select',
    '#default_value' => $settings['image_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );
  $element['image_link_style'] = array(
    '#title' => t('Link image to image style'),
    '#type' => 'select',
    '#default_value' => $settings['image_link_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function image_formatter_link_to_image_style_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);
  // Styles could be lost because of enabled/disabled modules that defines
  // their styles in code.
  if (isset($image_styles[$settings['image_style']])) {
    $summary[] = t('Image style: @style', array('@style' => $image_styles[$settings['image_style']]));
  }
  else {
    $summary[] = t('Original image');
  }

  if (isset($image_styles[$settings['image_link_style']])) {
    $summary[] = t('Linked to image style: @style', array('@style' => $image_styles[$settings['image_link_style']]));
  }
  else {
    $summary[] = t('Linked to original image');
  }


  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function image_formatter_link_to_image_style_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  foreach ($items as $delta => $item) {
    if (isset($display['settings']['image_link_style'])) {
      $path = image_style_url($display['settings']['image_link_style'], $item['uri']);
    }
    else {
      $path = file_create_url($item['uri']);
    }
    $uri = array(
      'path' => $path,
      'options' => array(),
    );
    $element[$delta] = array(
      '#theme' => 'image_formatter',
      '#item' => $item,
      '#image_style' => $display['settings']['image_style'],
      '#path' => $uri,
    );
  }

  return $element;
}
